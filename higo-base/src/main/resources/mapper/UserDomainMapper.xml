<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crc.higo.mapper.UserDomainMapper">
    <resultMap id="userResultMap" type="com.crc.higo.domain.UserDomain">
        <id property="id" column="id"></id>
        <result property="userName" column="user_name"></result>
        <result property="password" column="password"></result>
        <result property="nick" column="nick"></result>
        <result property="headImg" column="head_img"></result>
        <result property="type" column="type"></result>
        <result property="mobile" column="mobile"></result>
        <result property="createUser" column="create_user"></result>
        <result property="createDate" column="create_date"></result>
        <result property="updateUser" column="update_user"></result>
        <result property="updateDate" column="update_date"></result>
        <result property="delFlag" column="del_flag"></result>
    </resultMap>

    <sql id="sql_column">
        id,user_name,password,nick,head_img,type,mobile,create_user,create_date,update_user,update_date,del_flag
    </sql>

    <sql id="sql_where">
        from users where del_flag=0 and type=1
        <if test="userName!=null and userName!=''">and user_name like #{userName}||'%'</if>
        <if test="nick != null and nick != ''">and nick like #{nick}||'%'</if>
    </sql>

    <sql id="sql_where_admin">
        from users where del_flag=0 and type=0
        <if test="userName!=null and userName!=''">and user_name like #{userName}||'%'</if>
        <if test="nick != null and nick != ''">and nick like #{nick}||'%'</if>
    </sql>

    <select id="findUserByName" parameterType="java.lang.String" resultMap="userResultMap">
        select <include refid="sql_column"></include>
        from users where user_name=#{userName} and del_flag=0
    </select>

    <insert id="addUserDomain">
        <selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
            select sys_guid() from dual
        </selectKey>
        inset into users(
        <include refid="sql_column"></include>
        ) values (#{id}, #{userName}, #{password}, #{nick}, #{headImg}, #{type}, #{mobile}, #{createUser}, sysdate, null, 0)
    </insert>

    <update id="deleteUserDomain" parameterType="java.lang.String">
        update users set del_flag=1 where id=#{userId}
    </update>

    <update id="updateUserDomain" parameterType="com.crc.higo.domain.UserDomain">
        update users set user_name=#{userName},password=#{password},nick=#{nick},head_img=#{headImg},mobile=#{mobile},update_date=sysdate
        where id=#{id}
    </update>

    <select id="findUserList" resultMap="userResultMap">
        select <include refid="sql_column"></include>
        <include refid="sql_where"></include>
    </select>

    <select id="findUserById" parameterType="java.lang.String" resultMap="userResultMap">
        select <include refid="sql_column"></include>
        from users where id=#{userId} and del_flag=0
    </select>

    <update id="updatePassword" parameterType="com.crc.higo.domain.UserDomain">
        update users set password=#{password} where id=#{id}
    </update>

    <select id="findAdminUserList" resultMap="userResultMap">
        select <include refid="sql_column"></include>
        <include refid="sql_where_admin"></include>
    </select>

    <insert id="addAdminUser" parameterType="com.crc.higo.domain.UserDomain">
        <selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
            select sys_guid() from dual
        </selectKey>
        insert into users(
        <include refid="sql_column"></include>
        ) values(#{id}, #{userName}, #{password}, #{nick}, #{headImg}, #{type}, #{mobile}, #{createUser}, #{createDate}, null, null, 0)
    </insert>

    <update id="updateUser" parameterType="com.crc.higo.domain.UserDomain">
        update users set user_name=#{userName},nick=#{nick},mobile=#{mobile},update_user=#{updateUser},update_date=#{updateDate} where id=#{id}
    </update>


</mapper>